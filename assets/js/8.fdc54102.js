(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{194:function(t,a,e){"use strict";e.r(a);var s=e(3),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("p",[t._v("Keel can be used in many different environments with a bunch of various settings. See these examples to understand which configuration suits your needs.")]),t._v(" "),e("h2",{attrs:{id:"example-1-push-to-deploy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-1-push-to-deploy","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 1: Push to deploy")]),t._v(" "),e("p",[t._v("In this tutorial, we will configure several tools to enable automated Kubernetes updates on Git push. This workflow is mostly useful when developing apps for Kubernetes. For production, we recommend tag approach where a tagged release would trigger an image build and Keel update policies would increase the version.")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/force-workflow.png",alt:"Keel Force Workflow"}})]),t._v(" "),e("p",[t._v("Once a workflow is ready, any push to the master branch (or merge requests from develop/feature branches) will update your app running in Kubernetes.")]),t._v(" "),e("p",[t._v("In this tutorial we will use:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/kubernetes/minikube#what-is-minikube",target:"_blank",rel:"noopener noreferrer"}},[t._v("Minikube"),e("OutboundLink")],1),t._v(" - our local development Kubernetes environment. Mac users are free to use Docker for Mac with Kubernetes support, works fine!")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm"),e("OutboundLink")],1),t._v(" - Kubernetes package manager")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),e("OutboundLink")],1),t._v(" - we will store our code here")]),t._v(" "),e("li",[t._v("DockerHub - our Docker images will be built and stored here")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://webhookrelay.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webhook Relay"),e("OutboundLink")],1),t._v(" - will relay public webhooks to our internal Kubernetes environment so we don't have to expose Keel to the public internet")])]),t._v(" "),e("h3",{attrs:{id:"set-up-github-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-up-github-repository","aria-hidden":"true"}},[t._v("#")]),t._v(" Set up GitHub repository")]),t._v(" "),e("p",[t._v("First, let's set up our versioning control system. Let's create a local repo of our example app and push it to our GitHub repository.")]),t._v(" "),e("p",[t._v("Our example app will be a really really simple one:")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" version "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v0"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Welcome to my website! Version %s"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"App is starting, version: %s \\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8500"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Dockerfile and Kubernetes deployment files can be found here: https://github.com/keel-hq/push-workflow-example.")]),t._v(" "),e("p",[t._v("Commit your code and push to remote:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n")])])]),e("h3",{attrs:{id:"create-kubernetes-namespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-kubernetes-namespace","aria-hidden":"true"}},[t._v("#")]),t._v(" Create Kubernetes namespace")]),t._v(" "),e("p",[t._v("To keep things isolated, create a new Kubernetes namespace:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl create namespace push-workflow\n")])])]),e("p",[t._v("From here, we will use namespace called 'push-workflow'. You can choose any other name, just update following commands to target your namespace.")]),t._v(" "),e("p",[t._v("It's also handy to set this namespace as your current context:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl config set-context "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("kubectl config current-context"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("push-workflow\n")])])]),e("h3",{attrs:{id:"enable-webhook-relay-forwarding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enable-webhook-relay-forwarding","aria-hidden":"true"}},[t._v("#")]),t._v(" Enable Webhook Relay forwarding")]),t._v(" "),e("p",[t._v("Webhook Relay operator will create a public endpoint and destination where to forward webhooks. Let's install it:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" webhookrelay https://charts.webhookrelay.com\nhelm repo update\n")])])]),e("p",[t._v("Get access token from "),e("a",{attrs:{href:"https://my.webhookrelay.com/tokens",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(". Once you click on 'Create Token', it will generate it and show a helper to set environment variables:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export RELAY_KEY=*****-****-****-****-*********\nexport RELAY_SECRET=**********\n")])])]),e("p",[t._v("Install through Helm:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm upgrade --install webhookrelay-operator --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("push-workflow webhookrelay/webhookrelay-operator \\\n  --set credentials.key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RELAY_KEY")]),t._v(" --set credentials.secret"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$RELAY_SECRET")]),t._v("\n")])])]),e("p",[t._v("To view installed application:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm list\nNAME                 \tNAMESPACE    \tREVISION\tUPDATED                                \tSTATUS  \tCHART                      \tAPP VERSION\nwebhookrelay-operator\tpush-workflow\t1       \t2020-06-21 15:39:32.978269521 +0100 BST\tdeployed\twebhookrelay-operator-0.1.3\t1.16.0     \n")])])]),e("p",[t._v("Once operator is deployed, you can create a simple CR (Custom Resource, located in the "),e("strong",[t._v("push-workflow-example")]),t._v(" repository) that will let you receive and forward webhooks:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# webhookrelay_cr.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" forward.webhookrelay.com/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" WebhookRelayForward\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("forward\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("buckets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dockerhub"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("keel\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dockerhub"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("endpoint\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Public endpoint"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responseBody")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("responseStatusCode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("outputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keel\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//keel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("9300/v1/webhooks/dockerhub\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("internal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n\n")])])]),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl apply -f webhookrelay_cr.yaml\n")])])]),e("p",[t._v("You should see two pods running now:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get pods\nNAME                                           READY   STATUS    RESTARTS   AGE\nkeel-forward-whr-deployment-869c4d4c86-txptt   1/1     Running   0          17s\nwebhookrelay-operator-74984df6d8-l475z         1/1     Running   0          9m31s\n")])])]),e("p",[t._v("If you use "),e("code",[t._v("kubectl describe")]),t._v(" command on the created CRD, you should be able to see your public endpoint (you can also view it if you go to your "),e("a",{attrs:{href:"https://my.webhookrelay.com/buckets",target:"_blank",rel:"noopener noreferrer"}},[t._v("buckets page"),e("OutboundLink")],1),t._v("):")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl describe webhookrelayforwards.forward.webhookrelay.com keel-forward\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nStatus:\n  Agent Status:  Running\n  Public Endpoints:\n    https://gz66jjp2wvfczfsjhoxutk.hooks.webhookrelay.com\n  Ready:           "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  Routing Status:  Configured\n")])])]),e("p",[t._v("Grab that ***.hooks.webhookrelay.com URL, we will need it in the next step.")]),t._v(" "),e("h3",{attrs:{id:"configure-dockerhub-code-repository-webhook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configure-dockerhub-code-repository-webhook","aria-hidden":"true"}},[t._v("#")]),t._v(" Configure DockerHub (code repository + webhook)")]),t._v(" "),e("p",[t._v("Now, we need to tell DockerHub to build a new image on every GitHub push to the master branch. First, go to https://cloud.docker.com, then "),e("code",[t._v("Repositories")]),t._v(" and click on "),e("code",[t._v("Create")]),t._v(" button. Once you have created the repository, link it to your GitHub account and click on "),e("code",[t._v("Configure Automated Builds")]),t._v(":")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/configure-autobuild.png",alt:"configure automated builds"}})]),t._v(" "),e("p",[t._v("Select your GitHub repository and create a trigger that will:")]),t._v(" "),e("ul",[e("li",[t._v("React to changes on a "),e("code",[t._v("master")]),t._v(" branch")]),t._v(" "),e("li",[t._v("Tag image as "),e("code",[t._v("latest")])])]),t._v(" "),e("p",[t._v("Ensure that "),e("code",[t._v("autobuild")]),t._v(' is switched on and click on "Save and Build". You will get your first image prepared.')]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/docker-build-config.png",alt:"configure automated builds"}})]),t._v(" "),e("p",[t._v("Also, we will need to setup DockerHub webhooks to Keel via Webhook Relay. To configure webhooks, go to https://hub.docker.com:")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/dockerhub-webhook.png",alt:"dockerhub webhooks"}})]),t._v(" "),e("h3",{attrs:{id:"deploying-keel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploying-keel","aria-hidden":"true"}},[t._v("#")]),t._v(" Deploying Keel")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" keel https://charts.keel.sh\nhelm repo update\n")])])]),e("p",[t._v("And install it (we are disabling Keel's helm provider here as we are only going to work with Kubernetes manifests):")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("helm upgrade --install keel --namespace"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("push-workflow keel/keel --set helmProvider.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(" --set service.enabled"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" --set service.type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ClusterIP"')]),t._v("\n")])])]),e("h3",{attrs:{id:"deploy-your-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-your-app","aria-hidden":"true"}},[t._v("#")]),t._v(" Deploy your app")]),t._v(" "),e("p",[t._v("Now, we need to create a deployment file of our app:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pushwf  \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pushwf"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# force policy will ensure that deployment is updated")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# even when tag is unchanged (latest remains)")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keel.sh/policy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" force\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("revisionHistoryLimit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pushwf\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pushwf\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pushwf\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                    \n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keelhq/push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("workflow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("example"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# this is required to force pull image     ")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pushwf\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8500")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8500")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])])]),e("p",[t._v("Save it as "),e("code",[t._v("deployment.yaml")]),t._v(" and create it via kubectl:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl create -f deployment.yaml\n")])])]),e("p",[t._v("Check whether it's running:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get pods\nNAME                      READY     STATUS    RESTARTS   AGE\npushwf-8476855f97-nw4st   1/1       Running   0          1m\n$ kubectl logs pushwf-8476855f97-nw4st\nApp is starting, version: v0\n")])])]),e("h3",{attrs:{id:"push-to-update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push-to-update","aria-hidden":"true"}},[t._v("#")]),t._v(" Push to update")]),t._v(" "),e("p",[t._v("Now, update your Go program's version string to "),e("code",[t._v("v1")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"net/http"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" version "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HandleFunc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResponseWriter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Request"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fprintf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Welcome to my website! Version %s"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    fmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"App is starting, version: %s \\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" version"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ListenAndServe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8500"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Commit and push. In a minute or two (depending on how fast DockerHub can build your image) our app should be updated. Since it's using webhooks, an update should be pretty much instantaneous.")]),t._v(" "),e("p",[t._v("If you visit Webhook Relay "),e("code",[t._v("dockerhub")]),t._v(" bucket's page, it should show relayed webhook:")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/whr-dockerhub-relayed.png",alt:"dockerhub webhooks"}})]),t._v(" "),e("p",[t._v("Let's check our deployments rollout history:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl rollout "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" deployment/pushwf\ndeployments "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pushwf"')]),t._v("\nREVISION  CHANGE-CAUSE\n1         "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n2         keel automated update, version latest -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" latest\n")])])]),e("p",[t._v("And logs, just to be sure that our application is running the latest code:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get pods\nNAME                      READY     STATUS    RESTARTS   AGE\npushwf-74c574f9cf-l6lq2   1/1       Running   0          4m\n$ kubectl logs pushwf-74c574f9cf-l6lq2\nApp is starting, version: v1 \n")])])]),e("h3",{attrs:{id:"conclusion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conclusion","aria-hidden":"true"}},[t._v("#")]),t._v(" Conclusion")]),t._v(" "),e("p",[t._v("While setting up Keel and Webhook Relay can take several of your precious minutes away, it saves an enormous amount of time later. Not only you get an instant update to your applications based on policies but you also ensure that you won't update wrong cluster or environment by mistake. And, of course, you won't even need to use "),e("code",[t._v("kubectl")]),t._v(" for your application updates.")]),t._v(" "),e("p",[t._v("Once Keel is set up in your cluster in can manage many (all) of your applications. When you add your next app to the cluster, just specify the policy and point DockerHub webhook to the same Webhook Relay endpoint. Keel will filter out relevant deployments based on webhook payload and update them.")]),t._v(" "),e("p",[t._v("If you have any questions or find parts of this tutorial incorrect, please raise an issue on Keel's repository "),e("a",{attrs:{href:"https://github.com/keel-hq/keel/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"example-2-enable-automated-semver-updates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-2-enable-automated-semver-updates","aria-hidden":"true"}},[t._v("#")]),t._v(" Example 2: Enable automated semver updates")]),t._v(" "),e("p",[t._v("Once in a while (or more often) you need to update your application that's running in a cloud-native fashion inside Kubernetes.")]),t._v(" "),e("p",[t._v("Let's see how easy it is to do it with Keel.")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/examples/keel-quick-start.png",alt:"Keel Quick Start"}})]),t._v(" "),e("h3",{attrs:{id:"install-keel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-keel","aria-hidden":"true"}},[t._v("#")]),t._v(" Install Keel")]),t._v(" "),e("p",[t._v("Installing Keel is the first step, as long as no update policies are defined in your application deployment files or Helm Charts, Keel will ignore them.\nYou can choose your preferred installation type (kubectl or Helm) to deploy Keel, more details are available "),e("router-link",{attrs:{to:"/docs/#installation"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"specify-update-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#specify-update-policy","aria-hidden":"true"}},[t._v("#")]),t._v(" Specify update policy")]),t._v(" "),e("p",[t._v("Our example app is 'webhook-demo' which pretty much doesn't do anything except registering incoming webhooks and showing them. Deployment file can be found here: "),e("a",{attrs:{href:"https://github.com/webhookrelay/webhook-demo/blob/master/hack/deployment.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/webhookrelay/webhook-demo/blob/master/hack/deployment.yml"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("While traditional deployment manifest would look like this:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wd"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd        \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                    \n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" karolisr/webhook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.0.8\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always            \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/webhook-demo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8090       ")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /healthz\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8090")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),e("p",[t._v("We need to add Keel policy for updates and optional trigger type.")]),t._v(" "),e("p",[t._v("These settings have to be specified as annotations:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("keel.sh/policy: major\nkeel.sh/trigger: poll      \n")])])]),e("p",[t._v("Here:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("keel.sh/policy: major")]),t._v(" specifies that all - major, minor and patch versions should trigger application update.")]),t._v(" "),e("li",[e("strong",[t._v("keel.sh/trigger: poll")]),t._v(" informs Keel to create an active watcher for the repository that's specified in the deployment file. For private repositories Keel will use existing secrets that Kubernetes uses to pull the image so no additional configuration required. Polling trigger is useful when webhooks or GCR pubsub is not availabe. If you have PUBSUB enabled for your cluster, then you shouldn't use polling trigger.")])]),t._v(" "),e("p",[t._v("Now, our deployment file looks like this:")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wd"')]),t._v("      \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keel.sh/policy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" major\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keel.sh/trigger")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" poll      \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keel.sh/pollSchedule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@every 30s"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd        \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                    \n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" karolisr/webhook"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0.0.8\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Always            \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wd\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/webhook-demo"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8090       ")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("livenessProbe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /healthz\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8090")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("initialDelaySeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeoutSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("securityContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("privileged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),e("p",[t._v("That's it, we update our deployment with new labels, if you already have your app deployed:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("kubectl apply -f your-app-deployment.yaml\n")])])]),e("p",[t._v("And then wait for a few minutes till Keel picks up the changes and updates the workload.")])])},[],!1,null,null,null);a.default=n.exports}}]);